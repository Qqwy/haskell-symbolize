name:                symbolize
version:             0.1.0.3
github:              "Qqwy/haskell-symbolize"
license:             BSD-3-Clause
author:              "Qqwy / Marten"
maintainer:          "qqwy@gmx.com"
copyright:           "2023 Marten Wijnja"

extra-source-files:
- README.md
- CHANGELOG.md

# Metadata used when publishing your package
synopsis:            Efficient global Symbol table, with Garbage Collection. 
category:            Data, Data Structures
tested-with:
  GHC ==9.2.8 || ==9.4.8 || ==9.6.4 || ==9.8.2 || ==9.10.1

# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description: |
  Symbols, also known as Atoms or Interned Strings, are a common technique
  to reduce memory usage and improve performance when using many small strings.

  By storing a single copy of each encountered string in a global table and giving out indexes to that table,
  it is possible to compare strings for equality in constant time, instead of linear (in string size) time.

  The main advantages of Symbolize over existing symbol table implementations are:

  - Garbage collection: Symbols which are no longer used are automatically cleaned up.
  - `Symbol`s have a memory footprint of exactly 1 `Word` and are nicely unpacked by GHC.
  - Support for any `Textual` type, including `String`, (strict and lazy) `Data.Text`, (strict and lazy) `Data.ByteString` etc.
  - Thread-safe.
  - Calls to `lookup` and `unintern` are free of atomic memory barriers (and never have to wait on a concurrent thread running `intern`)
  - Support for a maximum of 2^64 symbols at the same time (you'll probably run out of memory before that point).

  Please see the full README below or on GitHub at <https://github.com/Qqwy/haskell-symbolize#readme>


dependencies:
- base                 >= 4.7    && < 5
- bytestring           >= 0.11.0 && < 0.12
- deepseq              >= 1.4.0  && < 1.5
- hashable             >= 1.4.0  && < 1.5
- text                 >= 2.0    && < 2.2
- text-display         >= 0.0.5  && < 0.1
- text-short           >= 0.1.0  && < 0.2
- unordered-containers >= 0.2.0  && < 0.3
- containers           >= 0.6.0  && < 0.7

ghc-options:
- -Wall
- -Wcompat
- -Widentities
- -Wincomplete-record-updates
- -Wincomplete-uni-patterns
- -Wmissing-export-lists
- -Wmissing-home-modules
- -Wpartial-fields
- -Wredundant-constraints


library:
  source-dirs: src
  other-modules:
  - Symbolize.Textual
  - Symbolize.Accursed

# executables:
#   symbolize-exe:
#     main:                Main.hs
#     source-dirs:         app
#     ghc-options:
#     - -threaded
#     - -rtsopts
#     - -with-rtsopts=-N
#     dependencies:
#     - symbolize

tests:
  symbolize-test:
    main:                Suite.hs
    source-dirs:         test/suite
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - symbolize
    - hedgehog
    - tasty
    - tasty-hedgehog
    - tasty-hunit
    - tasty-golden
    - async
    build-tools:
      tasty-discover:tasty-discover
  symbolize-doctest:
    main:                DocTest.hs
    source-dirs:         test/doctest
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - symbolize
    - doctest-parallel

default-extensions:
- BangPatterns
- OverloadedStrings
- DeriveAnyClass
- TypeApplications
- NamedFieldPuns
